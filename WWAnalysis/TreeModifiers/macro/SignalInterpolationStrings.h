#include <vector>
#include <iostream>
#include <iomanip>
#include <utility>
#include <string>
#include <fstream>
#include <sstream>
#include <iostream>
#include <cmath>
#include <algorithm>

std::string getSignalCBMeanString(float m, int ch, bool do7TeV) {
    stringstream fss;
    fss << "( ";  

    if (!doFFT) fss << "@0 + ";

    if (m<400.) {
        if (do7TeV) {
            if (ch == 0) fss << "1.19808 - 0.0157097*@0+ 4.52228e-05*@0*@0";
            if (ch == 1) fss << "-0.247983 + 0.000634285*@0 - 1.43968e-05*@0*@0";
            if (ch == 2) fss << "1.23762  - 0.0156679*@0 + 3.6011e-05*@0*@0";
        }
        else {
            if (ch == 0) fss << "";
            if (ch == 1) fss << "";
            if (ch == 2) fss << "";
        }
    }
    else {
        if (do7TeV) {
            if (ch == 0) fss << "-16.6276 + 0.0687102*@0 - 6.77708e-05*@0*@0";
            if (ch == 1) fss << "-7.44972 - 0.0367781*@0 - 4.50428e-05*@0*@0";
            if (ch == 2) fss << "-6.29585 + 0.0243109*@0 - 2.25136e-05*@0*@0";
        }
        else {
            if (ch == 0) fss << "";
            if (ch == 1) fss << "";
            if (ch == 2) fss << "";
        }
    }
    fss << " ) + @0*@1";
    return fss.str();
}

std::string getSignalCBSigmaString(float m, int ch, do7TeV) {
    stringstream fss;
    fss << "( ";  

    if (m<400.) {
        if (do7TeV) {
            if (ch == 0) fss << "-0.285169 + 0.0114361*@0";
            if (ch == 1) fss << "0.533567  + 0.00844203*@0";
            if (ch == 2) fss << "-0.149687 + 0.0114497*@0";
        }
        else {
            if (ch == 0) fss << "";
            if (ch == 1) fss << "";
            if (ch == 2) fss << "";
        }
    }
    else {
        if (do7TeV) {
            if (ch == 0) fss << "-76.1139+ 0.194035*@0";
            if (ch == 1) fss << "-74.608 + 0.199689*@0";
            if (ch == 2) fss << "-93.4113+ 0.210916*@0";
        }
        else {
            if (ch == 0) fss << "";
            if (ch == 1) fss << "";
            if (ch == 2) fss << "";
        }
    }
    fss << " ) * (1+@1)";
    return fss.str();
}

std::string getSignalCBAlphaLString(float m, int ch, bool do7TeV) {
    stringstream fss;
   
    if (m<400.) {
        if (do7TeV) {
            if (ch == 0) fss << "2.16978 - 0.0100386*@0 + 3.06387e-05*@0*@0";
            if (ch == 1) fss << "1.74371 - 0.0148289*@0 + 4.80635e-05*@0*@0";
            if (ch == 2) fss << "0.412834+ 0.00282639*@0- 6.23897e-07*@0*@0";
        }
        else {
            if (ch == 0) fss << "";
            if (ch == 1) fss << "";
            if (ch == 2) fss << "";
        }
    }
    else {
        if (do7TeV) {
            if (ch == 0) fss << "2.39057 - 0.00281066*@0 + 1.20885e-06*@0*@0";
            if (ch == 1) fss << "0.560228 + 0.00083283*@0 - 6.87484e-07*@0*@0";
            if (ch == 2) fss << "3.58936 - 0.00629454*@0 + 3.46847e-06*@0*@0";
        }
        else {
            if (ch == 0) fss << "";
            if (ch == 1) fss << "";
            if (ch == 2) fss << "";
        }
    }

    return fss.str();
}

std::string getSignalCBNLString(float m, int ch, bool do7TeV) {
    stringstream fss;

    if (m<400.) {
        if (do7TeV) {
            if (ch == 0) fss << "1.2423  + 0.0140357*@0 - 5.24128e-05*@0*@0";
            if (ch == 1) fss << "19.8522 - 0.119435*@0  + 0.000211746*@0*@0";
            if (ch == 2) fss << "10.1993 - 0.0505591*@0 + 7.26949e-05*@0*@0";
        }
        else {
            if (ch == 0) fss << "";
            if (ch == 1) fss << "";
            if (ch == 2) fss << "";
        }
    }
    else {
        if (do7TeV) {
            if (ch == 0) fss << "-16.3605 + 0.0280421*@0  + 4.41476e-05*@0*@0";
            if (ch == 1) fss << "50.258   - 0.00705302*@0 + 7.3042e-06*@0*@0 ";
            if (ch == 2) fss << "-166.157 + 0.505487*@0   - 0.000293294*@0*@0";
        }
        else {
            if (ch == 0) fss << "";
            if (ch == 1) fss << "";
            if (ch == 2) fss << "";
        }
    }


    return fss.str();
}

std::string getSignalCBAlphaRString(float m, int ch, bool do7TeV) {
    stringstream fss;

    if (m<400.) {
        if (do7TeV) {
            if (ch == 0) fss << "3.5481   - 0.0253602*@0 + 8.05487e-05*@0*@0";
            if (ch == 1) fss << "0.407056 + 0.0132422*@0 - 3.27199e-05*@0*@0";
            if (ch == 2) fss << "1.27834  - 0.0016328*@0 + 2.31291e-05*@0*@0";
        }
        else {
            if (ch == 0) fss << "";
            if (ch == 1) fss << "";
            if (ch == 2) fss << "";
        }
    }
    else {
        if (do7TeV) {
            if (ch == 0) fss << "1.81745 - 0.00114213*@0 + 8.16192e-08*@0*@0";
            if (ch == 1) fss << "4.49186 - 0.00730365*@0 + 3.5418e-06*@0*@0";
            if (ch == 2) fss << "2.66107 - 0.00347289*@0 + 1.79224e-06*@0*@0";
        }
        else {
            if (ch == 0) fss << "";
            if (ch == 1) fss << "";
            if (ch == 2) fss << "";
        }
    }


    return fss.str();
}

std::string getSignalCBNRString(float m, int ch, bool do7TeV) {
    stringstream fss;

    if (m<400.) {
        if (do7TeV) {
            if (ch == 0) fss << "-58.3256 + 0.902996*@0  - 0.00245076*@0*@0";
            if (ch == 1) fss << "52.8671  - 0.720202*@0  + 0.00259699*@0*@0";
            if (ch == 2) fss << "20.5132  - 0.174721*@0  + 0.000528563*@0*@0";
        }
        else {
            if (ch == 0) fss << "";
            if (ch == 1) fss << "";
            if (ch == 2) fss << "";
        }
    }
    else {
        if (do7TeV) {
            if (ch == 0) fss << "181.949 - 0.511484*@0  + 0.000364367*@0*@0";
            if (ch == 1) fss << "16.6767 - 0.0643021*@0 + 6.28985e-05*@0*@0";
            if (ch == 2) fss << "13.8956 - 0.0390786*@0 + 3.32503e-05*@0*@0";
        }
        else {
            if (ch == 0) fss << "";
            if (ch == 1) fss << "";
            if (ch == 2) fss << "";
        }
    }


    return fss.str();
}


std::string getSignalBWGammaString(float m, int ch, bool do7TeV) {
    stringstream fss;

    if (do7TeV) {
        if (ch == 0) fss << "57.4228  - 0.212212*@0 + 0.000445683*@0*@0 - 2.28984e-07*@0*@0*@0";
        if (ch == 1) fss << "-1550.46 + 7.88262*@0  - 0.0122564*@0*@0 + 6.03534e-06*@0*@0*@0";
        if (ch == 2) fss << "-1703.77 + 8.27576*@0  - 0.0124013*@0*@0 + 5.90086e-06*@0*@0*@0";
    }
    else {
        if (ch == 0) fss << "";
        if (ch == 1) fss << "";
        if (ch == 2) fss << "";
    }


    return fss.str();
}


std::string getYieldEfficiencyString(float m, int ch, bool do7TeV) {
    stringstream fss;

    if (do7TeV) {
        if      (ch == 0) return "(-2.52639) + (0.0553644)*@0 + (-0.000405676)*@0*@0 + (1.61242e-06)*@0*@0*@0 + (-3.78806e-09)*@0*@0*@0*@0 + (5.41746e-12)*@0*@0*@0*@0*@0 + (-4.63766e-15)*@0*@0*@0*@0*@0*@0 + (2.18648e-18)*@0*@0*@0*@0*@0*@0*@0 + (-4.37074e-22)*@0*@0*@0*@0*@0*@0*@0*@0";
        else if (ch == 1) return "(-2.59319) + (0.0514931)*@0 + (-0.000369965)*@0*@0 + (1.46651e-06)*@0*@0*@0 + (-3.49839e-09)*@0*@0*@0*@0 + (5.1664e-12)*@0*@0*@0*@0*@0 + (-4.63104e-15)*@0*@0*@0*@0*@0*@0 + (2.30959e-18)*@0*@0*@0*@0*@0*@0*@0 + (-4.91469e-22)*@0*@0*@0*@0*@0*@0*@0*@0";
        else              return "(-2.76074) + (0.0595281)*@0 + (-0.000455363)*@0*@0 + (1.90513e-06)*@0*@0*@0 + (-4.7343e-09)*@0*@0*@0*@0 + (7.17618e-12)*@0*@0*@0*@0*@0 + (-6.50896e-15)*@0*@0*@0*@0*@0*@0 + (3.24419e-18)*@0*@0*@0*@0*@0*@0*@0 + (-6.83026e-22)*@0*@0*@0*@0*@0*@0*@0*@0";
    }
    else {
        if      (ch == 0) return "(-3.28633) + (0.0682262)*@0 + (-0.000496505)*@0*@0 + (1.9491e-06)*@0*@0*@0 + (-4.50967e-09)*@0*@0*@0*@0 + (6.33717e-12)*@0*@0*@0*@0*@0 + (-5.31633e-15)*@0*@0*@0*@0*@0*@0 + (2.44814e-18)*@0*@0*@0*@0*@0*@0*@0 + (-4.76086e-22)*@0*@0*@0*@0*@0*@0*@0*@0";
        else if (ch == 1) return "(-2.59332) + (0.0490742)*@0 + (-0.000332895)*@0*@0 + (1.22995e-06)*@0*@0*@0 + (-2.70031e-09)*@0*@0*@0*@0 + (3.63235e-12)*@0*@0*@0*@0*@0 + (-2.94501e-15)*@0*@0*@0*@0*@0*@0 + (1.32399e-18)*@0*@0*@0*@0*@0*@0*@0 + (-2.53976e-22)*@0*@0*@0*@0*@0*@0*@0*@0";
        else              return "(-3.02899) + (0.0623266)*@0 + (-0.000461463)*@0*@0 + (1.86983e-06)*@0*@0*@0 + (-4.51599e-09)*@0*@0*@0*@0 + (6.68363e-12)*@0*@0*@0*@0*@0 + (-5.94745e-15)*@0*@0*@0*@0*@0*@0 + (2.92147e-18)*@0*@0*@0*@0*@0*@0*@0 + (-6.08659e-22)*@0*@0*@0*@0*@0*@0*@0*@0";
    }

    return fss.str();
}

